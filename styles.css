@import url("https://fonts.googleapis.com/css2?family=EB+Garamond:ital,wght@0,400..800;1,400..800&display=swap");

*,
*:after,
*:before {
  box-sizing: border-box;
}

@property --expanded {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@property --active {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

@property --angle {
  inherits: true;
  initial-value: 0deg;
  syntax: "<angle>";
}

:root {
  --item: 80px;
  --accent: hsl(40 100% 75% / 0.95);
  --gap: 0.75rem;
  --transition: 0.25s;
  --elastic: linear(
    0 0%,
    0.0012 14.95%,
    0.0089 22.36%,
    0.0297 28.43%,
    0.0668 33.43%,
    0.0979 36.08%,
    0.1363 38.55%,
    0.2373 43.07%,
    0.3675 47.01%,
    0.5984 52.15%,
    0.7121 55.23%,
    0.8192 59.21%,
    0.898 63.62%,
    0.9297 66.23%,
    0.9546 69.06%,
    0.9733 72.17%,
    0.9864 75.67%,
    0.9982 83.73%,
    1 100%
  );
  --point: hsl(10 90% 70%);
  --spectrum: var(--point), var(--point);
  --blur: 12;
  --brightness: 1.25;
  --border: 2;
  --speed: 4;
  --line: hsl(0 0% 98% / 0.15);
  --transition: 0.25s;
}

html {
  color-scheme: light only;
}

html:not(:focus-within) {
  scroll-behavior: smooth;
}

body {
  display: flex;
  flex-direction: column;
  place-items: center;
  min-height: 100vh;
  padding: 1rem;
  font-family: "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue", Helvetica, Arial, sans-serif, system-ui;
  margin: 0;
  background: hsl(0 0% 6%);
  color: hsl(0 0% 90%);
}

main section {
  min-height: 100vh;
  display: grid;
  place-items: center;
  align-content: center;
  text-align: center;
}

body::before {
  --line: color-mix(in lch, canvasText 25%, transparent);
  --size: 60px;
  content: "";
  height: 100vh;
  width: 100vw;
  position: fixed;
  background: linear-gradient(90deg, var(--line) 1px, transparent 1px var(--size)) 0 -5vmin / var(--size) var(--size),
    linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0 -5vmin / var(--size) var(--size);
  mask: linear-gradient(-15deg, transparent 60%, white);
  top: 0;
  z-index: -1;
}

h2 {
  font-family: "EB Garamond", serif;
  font-size: clamp(1.5rem, 3vw + 1rem, 6rem);
}

header {
  min-height: 50vh;
  display: grid;
  place-items: center;
  align-content: center;
  text-align: center;
}

nav {
  position: sticky;
  top: 1rem;
  display: flex;
  border-radius: 100px;
  overflow: hidden;
  background: canvasText;
  color: canvas;
  font-size: 14px;
  height: 48px;
  padding-left: 0rem;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.nav__content {
  display: grid;
}

nav li {
  width: var(--item);
  text-align: center;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: var(--expanded);
  transition: opacity var(--transition) calc(0.75s + (var(--i) * 0.05s));
}

nav li:nth-of-type(1) {
  --i: 0;
}
nav li:nth-of-type(2) {
  --i: 1;
}
nav li:nth-of-type(3) {
  --i: 2;
}

nav li a {
  color: canvas;
  width: 100%;
  height: 100%;
  text-decoration: none;
  display: grid;
  place-items: center;
  white-space: nowrap;
}

footer {
  padding: 3rem 1rem;
  text-align: center;
  color: hsl(0 0% 60%);
  font-size: 0.9rem;
}

[href="#"] {
  width: 48px;
  display: grid;
  place-items: center;
  color: var(--accent);
}

[href="#"] svg {
  width: 24px;
}

.cook {
  border-radius: 100px;
  display: flex;
  gap: 0 0.5rem;
  align-items: center;
  background: canvasText;
  color: var(--accent);
  border: 0;
  padding: 0 var(--gap);
  white-space: nowrap;
  z-index: 2;
  cursor: pointer;
  position: relative;
}

.cook::before {
  content: "";
  position: absolute;
  right: 100%;
  width: 48px;
  aspect-ratio: 1;
  scale: calc(1 - var(--expanded)) 1;
  transition: scale var(--transition);
  transform-origin: 100% 50%;
}

.cook:is(:hover, :focus-visible) {
  --intent: 1;
}

.cook svg {
  width: 16px;
  min-width: 16px;
  stroke-width: 3px;
  rotate: calc(var(--intent, 0) * 360deg);
  transition: rotate var(--transition);
}

.cook span span {
  display: none;
}

@media (min-width: 768px) {
  .cook span span {
    display: inline-block;
  }
}

main {
  min-height: 200vh;
  width: 70ch;
  margin: 0 auto;
  margin-top: 6rem;
  max-width: 100%;
}

h1 {
  font-family: "EB Garamond", serif;
  font-size: clamp(3rem, 4vw + 1rem, 8rem);
  font-weight: 500;
  text-align: center;
  display: flex;
  flex-direction: column;
  line-height: 0.9;
}

h1 span:first-of-type {
  font-variant: small-caps;
  font-size: 0.5em;
}

h1 span:last-of-type {
  font-weight: 600;
}

.content {
  list-style-type: none;
  display: flex;
  height: 100%;
  align-items: center;
  padding: 0 1rem;
  margin: 0;
}

/* Scroll-driven animations */
@supports (animation-timeline: scroll()) {
  :root {
    timeline-scope: --header, --product, --price, --follow;
  }

  header {
    view-timeline-name: --header;
  }

  nav {
    animation: expand both steps(1, end);
    animation-timeline: --header;
    animation-range: exit;
  }

  li a {
    opacity: calc(0.5 + (var(--active)));
    position: relative;
    transition: opacity var(--transition);
  }

  li:is(:hover, :focus-visible) a {
    opacity: 1;
  }

  #product {
    view-timeline: --product;
  }
  #price {
    view-timeline: --price;
  }
  #follow {
    view-timeline: --follow;
  }

  nav li {
    animation: activate both steps(1);
  }

  li:has([href="#product"]) {
    animation-timeline: --product;
    animation-range: entry -100% exit 100%;
  }

  li:has([href="#price"]) {
    animation-timeline: --price;
  }

  li:has([href="#follow"]) {
    animation-timeline: --follow;
  }

  @keyframes activate {
    50% {
      --active: 1;
    }
  }

  a span {
    position: relative;
  }

  .nav__content {
    grid-template-columns: auto calc(var(--expanded) * (3 * var(--item))) auto;
    transition: grid-template-columns 1s var(--elastic);
  }

  .cook {
    padding-left: calc(var(--expanded) * var(--gap));
    transition: padding 1s var(--elastic);
  }

  @keyframes expand {
    to {
      --expanded: 1;
    }
  }
}

.scene {
  transform-style: preserve-3d;
  transition: transform 1s 3s;
  animation: spin calc(var(--speed) * 1s) infinite linear running;
  margin: 2rem 0;
}

.button-wrap {
  transition: transform 1s 1s;
}

.scene button {
  padding: 1rem 2rem;
  border-radius: 12px;
  border: calc(var(--border) * 1px) solid transparent;
  background: linear-gradient(#000, #000) padding-box, linear-gradient(#000 40%, #0000 60%) border-box,
    conic-gradient(from var(--angle, 0deg) in hsl longer hue, var(--spectrum)) 50% 50% / 200% 200% border-box;
  font-family: "Geist Sans", sans-serif;
  font-weight: 80;
  letter-spacing: 1px;
  cursor: pointer;
  position: relative;
  color: white;
  font-size: 1rem;
}

@keyframes spin {
  to {
    --angle: 360deg;
  }
}

.scene button::before {
  content: "";
  height: calc(50% + (var(--border) * 1px));
  width: calc(100% + (var(--border) * 2px));
  position: absolute;
  left: 50%;
  top: 50%;
  translate: -50% 0;
  z-index: -1;
  background: conic-gradient(from var(--angle, 0deg) in hsl longer hue, var(--spectrum)) 50% 100% / 200% 200% border-box;
  border-radius: 50% 50% 12px 12px / 20px 20px 12px 12px;
  filter: blur(calc(var(--blur) * 1px)) brightness(calc(var(--brightness)));
  scale: calc((0.5 + (var(--intent, 0) * 0.46)) - var(--active, 0));
  transition: scale var(--transition);
}

.scene button::after {
  content: "";
  position: absolute;
  inset: calc(var(--border) * -1px);
  pointer-events: none;
  border: calc(var(--border) * 1px) solid hsl(0 0% 0% / 0.25);
  border-radius: 12px;
  opacity: calc(1 - var(--intent, 0));
  transition: opacity var(--transition);
}

.scene button:is(:hover, :focus-visible) {
  --intent: 1;
  outline: none;
}

.scene button:active {
  --active: 1;
}

/* Responsive Design - Maintaining All Functions Across Devices */
@media (max-width: 768px) {
  main {
    width: 90%;
    margin-top: 2rem;
    padding: 0 1rem;
  }

  h1 {
    font-size: clamp(2rem, 8vw, 4rem);
  }

  h2 {
    font-size: clamp(1.5rem, 6vw, 3rem);
  }

  /* Keep navigation functionality identical */
  nav {
    position: sticky;
    top: 1rem;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    max-width: 400px;
    /* Maintain all scroll animations */
  }

  /* Preserve all navigation animations and functions */
  .nav__content {
    grid-template-columns: auto calc(var(--expanded) * (3 * var(--item))) auto;
    transition: grid-template-columns 1s var(--elastic);
  }

  .cook {
    padding-left: calc(var(--expanded) * var(--gap));
    transition: padding 1s var(--elastic);
    font-size: 12px;
  }

  /* Keep button functionality identical */
  .scene button {
    padding: 0.75rem 1.5rem;
    font-size: 0.9rem;
    /* All hover, focus, and animation properties remain the same */
  }

  .scene button:is(:hover, :focus-visible) {
    --intent: 1;
    outline: none;
  }

  .scene button:active {
    --active: 1;
  }

  body::before {
    --size: 40px;
  }
}

@media (max-width: 480px) {
  header {
    min-height: 40vh;
    padding: 1rem;
  }

  main section p {
    font-size: 0.9rem;
    line-height: 1.6;
    max-width: 100%;
  }

  nav {
    height: 40px;
    font-size: 12px;
    /* All navigation functions preserved */
  }

  /* Maintain button functionality */
  .scene button {
    padding: 0.6rem 1.2rem;
    font-size: 0.8rem;
  }

  .scene button:is(:hover, :focus-visible) {
    --intent: 1;
    outline: none;
  }

  .scene button:active {
    --active: 1;
  }

  h1 span:first-of-type {
    font-size: 0.6em;
  }
}

/* Tablet - All functions identical to desktop */
@media (min-width: 769px) and (max-width: 1024px) {
  main {
    width: 80%;
    max-width: 800px;
  }

  nav {
    top: 2rem;
    /* All scroll-driven animations work identically */
  }

  .nav__content {
    grid-template-columns: auto calc(var(--expanded) * (3 * var(--item))) auto;
    transition: grid-template-columns 1s var(--elastic);
  }

  .cook {
    padding-left: calc(var(--expanded) * var(--gap));
    transition: padding 1s var(--elastic);
  }

  .scene button {
    padding: 1rem 2rem;
    font-size: 1rem;
  }

  .scene button:is(:hover, :focus-visible) {
    --intent: 1;
    outline: none;
  }

  .scene button:active {
    --active: 1;
  }
}

/* Large desktop - All functions identical */
@media (min-width: 1200px) {
  main {
    max-width: 900px;
  }

  .scene button {
    padding: 1.2rem 2.4rem;
    font-size: 1.1rem;
  }

  .scene button:is(:hover, :focus-visible) {
    --intent: 1;
    outline: none;
  }

  .scene button:active {
    --active: 1;
  }
}

/* Ensure touch devices have same hover functionality */
@media (hover: none) and (pointer: coarse) {
  /* Mobile touch devices */
  .scene button:active {
    --intent: 1;
    --active: 1;
  }

  nav li a:active {
    opacity: 1;
  }

  .cook:active {
    --intent: 1;
  }
}

/* Ensure all animations work on all devices */
@media (prefers-reduced-motion: no-preference) {
  .scene {
    animation: spin calc(var(--speed) * 1s) infinite linear running;
  }

  .scene button::before {
    transition: scale var(--transition);
  }

  .scene button::after {
    transition: opacity var(--transition);
  }
}

/* Fallback for devices that don't support scroll-driven animations */
@supports not (animation-timeline: scroll()) {
  nav {
    --expanded: 1;
  }

  nav li {
    opacity: 1;
  }

  li a {
    opacity: 0.7;
  }

  li:is(:hover, :focus-visible, :active) a {
    opacity: 1;
  }
}

/* Improve text readability on all devices */
main section p {
  max-width: 65ch;
  margin: 0 auto;
  line-height: 1.7;
}

/* Ensure proper spacing for all sections */
main section {
  padding: 2rem 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

/* Social Media Navigation Styles */
.social-main {
  width: 66ch;
  max-width: 100%;
  margin: 2rem auto; /* Centered horizontally */
  display: flex; /* Use flexbox to center the nav */
  justify-content: center; /* Center the nav horizontally */
}

.social-main nav {
  position: relative;
  /* No need for display: inline-block here, flex handles it */
}

.social-main ul {
  padding: 0;
  margin: 0;
  display: grid;
  grid-auto-flow: column;
  list-style-type: none;
  /* Initial state: first column auto, others collapsed to 0fr */
  grid-template-columns: auto repeat(4, 0fr);
  transition: grid-template-columns 0.5s var(--elastic); /* Use the elastic transition */
  align-items: center;
  gap: 0.5rem; /* Consistent gap between items */
}

.social-main li {
  display: grid;
  place-items: center; /* Center content horizontally and vertically */
  height: 48px; /* Consistent height */
  z-index: calc(5 - var(--index)); /* Ensure proper stacking */
  overflow: hidden; /* Crucial for collapsing effect */
}

.social-main li:first-child {
  /* No specific width, auto from content */
}

.social-main li:nth-of-type(n + 2) {
  /* These are the expanding social links */
  opacity: var(--social-active, 0); /* Control visibility of the entire li */
  transition: opacity 0.3s ease 0.1s; /* Delay opacity for smoother effect */
}

.social-main a {
  background: hsl(0 0% 60% / 0.18);
  display: flex; /* Use flex for content inside a */
  align-items: center;
  justify-content: center;
  padding: 0.75rem 1rem;
  border-radius: 12px;
  color: hsl(0 0% 90%);
  font-size: 0.875rem;
  font-weight: 400;
  backdrop-filter: blur(40px);
  transition: all 0.3s ease;
  text-decoration: none;
  border: 1px solid hsl(0 0% 100% / 0.1);
  white-space: nowrap;
  height: 100%;
  width: 100%; /* Fill the grid cell */
  max-width: 130px; /* Limit max width of each expanded item */
  min-width: 48px; /* Minimum width for icon-only state */
}

.social-main a:visited {
  color: hsl(0 0% 90%);
}

.social-main svg {
  height: 20px;
  width: 20px;
  fill: currentColor;
  stroke: currentColor;
  flex-shrink: 0;
}

.social-main span {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* First item (Socials button) styling */
.social-main li:first-child a {
  background: var(--accent);
  color: hsl(0 0% 10%);
  font-weight: 500;
}

.social-main li:first-child a:hover {
  background: hsl(40 100% 80%);
}

/* Trigger expansion on hover or focus */
.social-main nav:is(:hover, :focus-within) {
  --social-active: 1;
}

.social-main nav:is(:hover, :focus-within) ul {
  /* Expanded state: first column auto, others take equal fractional space */
  grid-template-columns: auto repeat(4, 1fr);
}

/* Responsive adjustments for social navigation */
@media (max-width: 768px) {
  .social-main ul {
    grid-template-columns: auto repeat(4, 0fr); /* Collapse initially */
  }
  .social-main nav:is(:hover, :focus-within) ul {
    grid-template-columns: auto repeat(4, 1fr); /* Expand */
  }
  .social-main a {
    max-width: 100px; /* Smaller max-width for tablet */
    padding: 0.4rem 0.8rem;
    font-size: 0.8rem;
  }
  .social-main svg {
    height: 18px;
  }
}

@media (max-width: 480px) {
  .social-main a {
    max-width: 80px; /* Even smaller max-width for mobile */
    padding: 0.3rem 0.6rem;
    font-size: 0.75rem;
  }
  .social-main svg {
    height: 16px;
  }
  .social-main span {
    gap: 0.3rem;
  }
}
